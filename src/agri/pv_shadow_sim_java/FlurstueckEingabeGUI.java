/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package agri.pv_shadow_sim_java;


import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.JFormattedTextField;
import javax.swing.text.NumberFormatter;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClientBuilder;
import org.apache.http.util.EntityUtils;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.JSONArray;
import org.locationtech.jts.geom.*;

/**
 *
 * @author roesc
 */
public class FlurstueckEingabeGUI extends javax.swing.JFrame {

    private AgriPVData data;
    private KonfigurationGUI kGUI;
    private NumberFormatter zaehlerFormatter;
    private NumberFormatter gradFormatter;
    private NumberFormatter minFormatter;
    private NumberFormatter secFormat;
    private NumberFormatter utmFormatter;
    
    /**
     * Creates new form FlurstueckEingabeGUI
     */
    public FlurstueckEingabeGUI() {
        this.data = new AgriPVData();
        this.kGUI = new KonfigurationGUI();
        init();
        initComponents();
    }
    
    public FlurstueckEingabeGUI(AgriPVData data, KonfigurationGUI kGUI){
        this.data = data;
        this.kGUI = kGUI;
        init();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnUebernehmen = new javax.swing.JButton();
        jbtnAbbrechen = new javax.swing.JButton();
        jtbdpnFlurKoord = new javax.swing.JTabbedPane();
        jpnlFlurstueckEingabe = new javax.swing.JPanel();
        jlblGemeinde = new javax.swing.JLabel();
        jtxtfldGemeinde = new javax.swing.JTextField();
        jlblFlurstuecknummer = new javax.swing.JLabel();
        jfrmttxtfldFlurstueckzahler = new javax.swing.JFormattedTextField(zaehlerFormatter);
        jLabel1 = new javax.swing.JLabel();
        jfrmttxtfldFlurstuecknenner = new javax.swing.JFormattedTextField(zaehlerFormatter);
        jtbdpnKoordinatenEingabe = new javax.swing.JTabbedPane();
        jpnlKoordinatenEingabe = new javax.swing.JPanel();
        jtxtfldNGrad = new javax.swing.JFormattedTextField(gradFormatter);
        jlblN1 = new javax.swing.JLabel();
        jtxtfldNMinuten = new javax.swing.JFormattedTextField(minFormatter);
        jlblN2 = new javax.swing.JLabel();
        jtxtfldNSekunden = new javax.swing.JFormattedTextField(secFormat);
        jlblN3 = new javax.swing.JLabel();
        jtxtfldEGrad = new javax.swing.JFormattedTextField(gradFormatter);
        jlblE1 = new javax.swing.JLabel();
        jtxtfldEMinuten = new javax.swing.JFormattedTextField(minFormatter);
        jlblE2 = new javax.swing.JLabel();
        jtxtfldESekunden = new javax.swing.JFormattedTextField(secFormat);
        jlblE3 = new javax.swing.JLabel();
        jpnlETRS89_UTM = new javax.swing.JPanel();
        jtxtfldUTMEasting = new javax.swing.JFormattedTextField(utmFormatter);
        jtxtfldUTMNorthing = new javax.swing.JFormattedTextField(utmFormatter);
        jlblUTMEasting = new javax.swing.JLabel();
        jlblUTMNorthing = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Auswahl des Flurstücks");

        jbtnUebernehmen.setText("Übernehmen");
        jbtnUebernehmen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUebernehmenActionPerformed(evt);
            }
        });
        jbtnUebernehmen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnUebernehmenKeyPressed(evt);
            }
        });

        jbtnAbbrechen.setText("Abbrechen");
        jbtnAbbrechen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAbbrechenActionPerformed(evt);
            }
        });
        jbtnAbbrechen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jbtnAbbrechenKeyPressed(evt);
            }
        });

        jtbdpnFlurKoord.setForeground(new java.awt.Color(220, 214, 204));

        jlblGemeinde.setText("Gemeinde");

        jtxtfldGemeinde.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldGemeindeFocusGained(evt);
            }
        });
        jtxtfldGemeinde.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldGemeindeKeyPressed(evt);
            }
        });

        jlblFlurstuecknummer.setText("Flurstückzähler");

        jfrmttxtfldFlurstueckzahler.setColumns(10);
        jfrmttxtfldFlurstueckzahler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jfrmttxtfldFlurstueckzahlerKeyPressed(evt);
            }
        });

        jLabel1.setText("Flurstücksnenner");

        jfrmttxtfldFlurstuecknenner.setColumns(10);
        jfrmttxtfldFlurstuecknenner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jfrmttxtfldFlurstuecknennerKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jpnlFlurstueckEingabeLayout = new javax.swing.GroupLayout(jpnlFlurstueckEingabe);
        jpnlFlurstueckEingabe.setLayout(jpnlFlurstueckEingabeLayout);
        jpnlFlurstueckEingabeLayout.setHorizontalGroup(
            jpnlFlurstueckEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlFlurstueckEingabeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlFlurstueckEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlblGemeinde, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtfldGemeinde, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpnlFlurstueckEingabeLayout.createSequentialGroup()
                        .addGroup(jpnlFlurstueckEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jfrmttxtfldFlurstueckzahler, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlblFlurstuecknummer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jpnlFlurstueckEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jfrmttxtfldFlurstuecknenner))))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jpnlFlurstueckEingabeLayout.setVerticalGroup(
            jpnlFlurstueckEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlFlurstueckEingabeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlblGemeinde)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtxtfldGemeinde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpnlFlurstueckEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlblFlurstuecknummer)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlFlurstueckEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfrmttxtfldFlurstueckzahler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jfrmttxtfldFlurstuecknenner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jtbdpnFlurKoord.addTab("Flurstücknummer", jpnlFlurstueckEingabe);

        jtxtfldNGrad.setColumns(3);
        jtxtfldNGrad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldNGradFocusGained(evt);
            }
        });
        jtxtfldNGrad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldNGradKeyPressed(evt);
            }
        });

        jlblN1.setText("°");

        jtxtfldNMinuten.setColumns(2);
        jtxtfldNMinuten.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldNMinutenFocusGained(evt);
            }
        });
        jtxtfldNMinuten.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldNMinutenKeyPressed(evt);
            }
        });

        jlblN2.setText("'");

        jtxtfldNSekunden.setColumns(5);
        jtxtfldNSekunden.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldNSekundenFocusGained(evt);
            }
        });
        jtxtfldNSekunden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldNSekundenKeyPressed(evt);
            }
        });

        jlblN3.setText("'' N");

        jtxtfldEGrad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldEGradFocusGained(evt);
            }
        });
        jtxtfldEGrad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldEGradKeyPressed(evt);
            }
        });

        jlblE1.setText("°");

        jtxtfldEMinuten.setColumns(2);
        jtxtfldEMinuten.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldEMinutenFocusGained(evt);
            }
        });
        jtxtfldEMinuten.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldEMinutenKeyPressed(evt);
            }
        });

        jlblE2.setText("'");

        jtxtfldESekunden.setColumns(5);
        jtxtfldESekunden.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldESekundenFocusGained(evt);
            }
        });
        jtxtfldESekunden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldESekundenKeyPressed(evt);
            }
        });

        jlblE3.setText("'' E");

        javax.swing.GroupLayout jpnlKoordinatenEingabeLayout = new javax.swing.GroupLayout(jpnlKoordinatenEingabe);
        jpnlKoordinatenEingabe.setLayout(jpnlKoordinatenEingabeLayout);
        jpnlKoordinatenEingabeLayout.setHorizontalGroup(
            jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlKoordinatenEingabeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtxtfldEGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtfldNGrad, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblE1, javax.swing.GroupLayout.DEFAULT_SIZE, 13, Short.MAX_VALUE)
                    .addComponent(jlblN1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpnlKoordinatenEingabeLayout.createSequentialGroup()
                        .addComponent(jtxtfldEMinuten, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblE2, javax.swing.GroupLayout.DEFAULT_SIZE, 11, Short.MAX_VALUE))
                    .addGroup(jpnlKoordinatenEingabeLayout.createSequentialGroup()
                        .addComponent(jtxtfldNMinuten, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlblN2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtfldNSekunden, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtfldESekunden, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlblN3)
                    .addComponent(jlblE3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(196, 196, 196))
        );
        jpnlKoordinatenEingabeLayout.setVerticalGroup(
            jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlKoordinatenEingabeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtfldNGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblN1)
                    .addComponent(jlblN2)
                    .addComponent(jtxtfldNSekunden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblN3)
                    .addComponent(jtxtfldNMinuten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpnlKoordinatenEingabeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtfldEGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblE1)
                    .addComponent(jlblE2)
                    .addComponent(jtxtfldESekunden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblE3)
                    .addComponent(jtxtfldEMinuten, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jtbdpnKoordinatenEingabe.addTab("Koordinaten", jpnlKoordinatenEingabe);

        jtxtfldUTMEasting.setColumns(12);
        jtxtfldUTMEasting.setToolTipText("~ 470 000 m");
        jtxtfldUTMEasting.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldUTMEastingFocusGained(evt);
            }
        });
        jtxtfldUTMEasting.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldUTMEastingKeyPressed(evt);
            }
        });

        jtxtfldUTMNorthing.setColumns(12);
        jtxtfldUTMNorthing.setToolTipText("~ 5 340 000 m");
        jtxtfldUTMNorthing.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtxtfldUTMNorthingFocusGained(evt);
            }
        });
        jtxtfldUTMNorthing.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtxtfldUTMNorthingKeyPressed(evt);
            }
        });

        jlblUTMEasting.setText("Easting");
        jlblUTMEasting.setToolTipText("~ 470 000 m");

        jlblUTMNorthing.setText("Northing");
        jlblUTMNorthing.setToolTipText("~ 5 340 000 m");

        javax.swing.GroupLayout jpnlETRS89_UTMLayout = new javax.swing.GroupLayout(jpnlETRS89_UTM);
        jpnlETRS89_UTM.setLayout(jpnlETRS89_UTMLayout);
        jpnlETRS89_UTMLayout.setHorizontalGroup(
            jpnlETRS89_UTMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlETRS89_UTMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlETRS89_UTMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtxtfldUTMEasting)
                    .addComponent(jtxtfldUTMNorthing, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpnlETRS89_UTMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jlblUTMEasting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlblUTMNorthing, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        jpnlETRS89_UTMLayout.setVerticalGroup(
            jpnlETRS89_UTMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpnlETRS89_UTMLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpnlETRS89_UTMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtfldUTMEasting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblUTMEasting))
                .addGap(18, 18, 18)
                .addGroup(jpnlETRS89_UTMLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtfldUTMNorthing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlblUTMNorthing))
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jlblUTMEasting.getAccessibleContext().setAccessibleDescription("");

        jtbdpnKoordinatenEingabe.addTab("ETRS89/UTM", jpnlETRS89_UTM);

        jtbdpnFlurKoord.addTab("Koordinaten", jtbdpnKoordinatenEingabe);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jbtnAbbrechen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnUebernehmen))
                    .addComponent(jtbdpnFlurKoord))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jtbdpnFlurKoord, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnUebernehmen)
                    .addComponent(jbtnAbbrechen))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void init(){
        NumberFormat format = NumberFormat.getIntegerInstance();
        format.setGroupingUsed(false); // kein Tausenderpunkt

        NumberFormatter zaehlerFormatter = new NumberFormatter(format);
        zaehlerFormatter.setValueClass(Integer.class);
        zaehlerFormatter.setAllowsInvalid(false); // keine ungültige Eingabe
        zaehlerFormatter.setMinimum(1); // nur positive Zahlen > 0
        
        
        // Grad (-180–180 für Breite)
        NumberFormatter gradFormatter = new NumberFormatter(NumberFormat.getIntegerInstance());
        gradFormatter.setValueClass(Integer.class);
        gradFormatter.setAllowsInvalid(false);
        gradFormatter.setMinimum(-180);
        gradFormatter.setMaximum(180);

        // Minuten (0–59)
        NumberFormatter minFormatter = new NumberFormatter(NumberFormat.getIntegerInstance());
        minFormatter.setValueClass(Integer.class);
        minFormatter.setAllowsInvalid(false);
        minFormatter.setMinimum(0);
        minFormatter.setMaximum(59);

        // Sekunden (0–59.999)
        NumberFormat secFormat = NumberFormat.getNumberInstance();
        secFormat.setGroupingUsed(false);
        secFormat.setMaximumFractionDigits(3);

        NumberFormatter secFormatter = new NumberFormatter(secFormat);
        secFormatter.setValueClass(Double.class);
        secFormatter.setAllowsInvalid(false);
        secFormatter.setMinimum(0.0);
        secFormatter.setMaximum(59.999);

        
        NumberFormat utmFormat = NumberFormat.getNumberInstance();
        utmFormat.setGroupingUsed(false);
        utmFormat.setMaximumFractionDigits(3); // z. B. 5343969.150

        NumberFormatter utmFormatter = new NumberFormatter(utmFormat);
        utmFormatter.setValueClass(Double.class);
        utmFormatter.setAllowsInvalid(false);
        utmFormatter.setMinimum(100000.0); // Mindestwert im UTM-System
        utmFormatter.setMaximum(9999999.999); // z. B. Y-Koordinate
    }
    
    private void jbtnAbbrechenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAbbrechenActionPerformed
        jbtnAbbrechenPressed();
    }//GEN-LAST:event_jbtnAbbrechenActionPerformed

    private void jbtnUebernehmenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUebernehmenActionPerformed
        jbtnUebernehmenPressed();
    }//GEN-LAST:event_jbtnUebernehmenActionPerformed

    private void jtxtfldGemeindeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldGemeindeFocusGained
        jtxtfldGemeinde.selectAll();
    }//GEN-LAST:event_jtxtfldGemeindeFocusGained

    private void jtxtfldNGradFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldNGradFocusGained
        jtxtfldNGrad.selectAll();
    }//GEN-LAST:event_jtxtfldNGradFocusGained

    private void jtxtfldNMinutenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldNMinutenFocusGained
        jtxtfldNMinuten.selectAll();
    }//GEN-LAST:event_jtxtfldNMinutenFocusGained

    private void jtxtfldNSekundenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldNSekundenFocusGained
        jtxtfldNSekunden.selectAll();
    }//GEN-LAST:event_jtxtfldNSekundenFocusGained

    private void jtxtfldEGradFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldEGradFocusGained
        jtxtfldEGrad.selectAll();
    }//GEN-LAST:event_jtxtfldEGradFocusGained

    private void jtxtfldEMinutenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldEMinutenFocusGained
        jtxtfldEMinuten.selectAll();
    }//GEN-LAST:event_jtxtfldEMinutenFocusGained

    private void jtxtfldESekundenFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldESekundenFocusGained
        jtxtfldESekunden.selectAll();
    }//GEN-LAST:event_jtxtfldESekundenFocusGained

    private void jtxtfldUTMEastingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldUTMEastingFocusGained
        jtxtfldUTMEasting.selectAll();
    }//GEN-LAST:event_jtxtfldUTMEastingFocusGained

    private void jtxtfldUTMNorthingFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtfldUTMNorthingFocusGained
        jtxtfldUTMNorthing.selectAll();
    }//GEN-LAST:event_jtxtfldUTMNorthingFocusGained

    private void jtxtfldGemeindeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldGemeindeKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jfrmttxtfldFlurstueckzahler.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldGemeindeKeyPressed

    private void jtxtfldNGradKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldNGradKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jtxtfldNMinuten.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldNGradKeyPressed

    private void jtxtfldNMinutenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldNMinutenKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jtxtfldNSekunden.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldNMinutenKeyPressed

    private void jtxtfldNSekundenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldNSekundenKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jtxtfldEGrad.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldNSekundenKeyPressed

    private void jtxtfldEGradKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldEGradKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jtxtfldEMinuten.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldEGradKeyPressed

    private void jtxtfldEMinutenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldEMinutenKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jtxtfldESekunden.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldEMinutenKeyPressed

    private void jtxtfldESekundenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldESekundenKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jbtnUebernehmen.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldESekundenKeyPressed

    private void jtxtfldUTMEastingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldUTMEastingKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jtxtfldUTMNorthing.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldUTMEastingKeyPressed

    private void jtxtfldUTMNorthingKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtxtfldUTMNorthingKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jbtnUebernehmen.grabFocus();
        }
    }//GEN-LAST:event_jtxtfldUTMNorthingKeyPressed

    private void jbtnAbbrechenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnAbbrechenKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jbtnAbbrechenPressed();
        }
    }//GEN-LAST:event_jbtnAbbrechenKeyPressed

    private void jbtnUebernehmenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jbtnUebernehmenKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jbtnUebernehmenPressed();
        }
    }//GEN-LAST:event_jbtnUebernehmenKeyPressed

    private void jfrmttxtfldFlurstueckzahlerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jfrmttxtfldFlurstueckzahlerKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jfrmttxtfldFlurstuecknenner.grabFocus();
        }
    }//GEN-LAST:event_jfrmttxtfldFlurstueckzahlerKeyPressed

    private void jfrmttxtfldFlurstuecknennerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jfrmttxtfldFlurstuecknennerKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            jbtnUebernehmenPressed();
        }
    }//GEN-LAST:event_jfrmttxtfldFlurstuecknennerKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FlurstueckEingabeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FlurstueckEingabeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FlurstueckEingabeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FlurstueckEingabeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FlurstueckEingabeGUI().setVisible(true);
            }
        });
    }
    
    private void jbtnAbbrechenPressed(){
        this.dispose();
    }
    
    private void jbtnUebernehmenPressed(){
        // TODO API Call Etc. //jbtnUebernehmenKeyPressed
        String testjson1 = "{\"dateiname\":\"ALKIS-oE_089760_Schwäbisch_Hall_nas.zip\",\"zaehler\":\"50\",\"nenner\":\"0\",\"koordinaten\":[[470109.19,5343969.15],[470109.324,5343966.923],[470109.98,5343964.79],[470109.98,5343964.79],[470112.246,5343964.165],[470114.57,5343963.81],[470114.57,5343963.81],[470118.705,5343964.296],[470122.07,5343966.75],[470122.07,5343966.75],[470124.09,5343969.62],[470124.09,5343969.62],[470134.59,5343986.84],[470134.59,5343986.84],[470139.705,5343996.219],[470144.22,5344005.9],[470144.22,5344005.9],[470157.67,5344036.65],[470157.67,5344036.65],[470162.938,5344047.74],[470168.72,5344058.57],[470168.72,5344058.57],[470164.32,5344070.26],[470164.32,5344070.26],[470160.45,5344052.63],[470160.45,5344052.63],[470152.0,5344034.65],[470152.0,5344034.65],[470146.96,5344021.84],[470146.96,5344021.84],[470142.58,5344011.16],[470142.58,5344011.16],[470140.61,5344009.93],[470140.61,5344009.93],[470134.18,5343996.31],[470134.18,5343996.31],[470135.15,5343993.77],[470135.15,5343993.77],[470120.33,5343969.41],[470120.33,5343969.41],[470115.86,5343970.53],[470115.86,5343970.53],[470115.14,5343970.05],[470115.14,5343970.05],[470114.45,5343967.58],[470114.45,5343967.58],[470109.19,5343969.15]]}";
        String testjson2 = "{\"dateiname\":\"ALKIS-oE_089760_Salem_nas.zip\",\"zaehler\":\"33\",\"nenner\":\"0\",\"koordinaten\":[[520898.08,5291420.91],[520905.12,5291355.34],[520905.12,5291355.34],[520909.82,5291297.57],[520909.82,5291297.57],[520912.19,5291265.95],[520912.19,5291265.95],[520932.73,5291269.1],[520932.73,5291269.1],[520933.19,5291298.17],[520933.19,5291298.17],[520934.47,5291318.35],[520934.47,5291318.35],[520935.85,5291345.98],[520935.85,5291345.98],[520937.26,5291364.69],[520937.26,5291364.69],[520937.38,5291372.58],[520937.38,5291372.58],[520936.76,5291378.75],[520936.76,5291378.75],[520936.95,5291387.63],[520936.95,5291387.63],[520939.79,5291399.92],[520939.79,5291399.92],[520940.81,5291409.79],[520940.81,5291409.79],[520940.78,5291416.54],[520940.78,5291416.54],[520940.15,5291419.03],[520940.15,5291419.03],[520936.48,5291421.84],[520936.48,5291421.84],[520932.75,5291422.73],[520932.75,5291422.73],[520925.01,5291422.79],[520925.01,5291422.79],[520903.62,5291423.07],[520903.62,5291423.07],[520899.52,5291422.64],[520899.52,5291422.64],[520898.08,5291420.91]]}";
        String testjson3 = "{\"dateiname\":\"ALKIS-oE_086520_Bodman_nas.zip\",\"zaehler\":\"744\",\"nenner\":\"0\",\"koordinaten\":[[500647.28,5294258.25],[500648.08,5294239.22],[500648.08,5294239.22],[500838.79,5294216.63],[500838.79,5294216.63],[500840,5294233.95],[500840,5294233.95],[500647.28,5294258.25]]}";
//        System.out.println(testjson);
        try {
            CloseableHttpClient httpClient = HttpClientBuilder.create().build();
            HttpGet request = new HttpGet("http://data.fixer.io/api/latest?access_key=f32fbae88a693c498b0a4b92b3ad4f4e");//API Link 
            HttpResponse response = httpClient.execute(request);
            String apiResponse = EntityUtils.toString(response.getEntity(), "UTF-8");

            String testjson = (jtbdpnFlurKoord.getSelectedIndex()==0)?testjson1:(jtbdpnKoordinatenEingabe.getSelectedIndex()==0)?testjson2:testjson3;
            
            JSONParser jsonparser = new JSONParser();
            JSONObject gesamtJSON = (JSONObject) jsonparser.parse(testjson); // Hier apiResponse
            String[] gmn = gesamtJSON.get("dateiname").toString().split("_");
            data.gemeindename = gmn[2] + ((gmn.length > 4) ? gmn[3] : "");
            data.flurstueckszaehler = Integer.parseInt(gesamtJSON.get("zaehler").toString());
            data.flurstuecksnenner = Integer.parseInt(gesamtJSON.get("nenner").toString());
            
            JSONArray koordinatenJSON = (JSONArray) gesamtJSON.get("koordinaten");
            data.points = koordinatenJSON.size();
            
            data.grundstuecksgrenze = new double[2][data.points];
            data.mine = Double.MAX_VALUE;
            data.minn = Double.MAX_VALUE;
            data.maxe = Double.MIN_VALUE;
            data.maxn = Double.MIN_VALUE;
            
            ArrayList<Coordinate> tmpList = new ArrayList<>();
            
            for (int i = 0; i < data.points; i++) {
                JSONArray punkte = (JSONArray) koordinatenJSON.get(i);
                double tmpX = Double.parseDouble(punkte.get(0).toString());
                double tmpY = Double.parseDouble(punkte.get(1).toString());
                data.grundstuecksgrenze[0][i] = tmpX;
                data.grundstuecksgrenze[1][i] = tmpY;
                
                tmpList.add(new Coordinate(tmpX, tmpY));
                
                
//                System.out.println(i + ": E" + data.grundstuecksgrenze[0][i] + " N" + data.grundstuecksgrenze[1][i]);
                if(data.grundstuecksgrenze[0][i] < data.mine){
                    data.mine = data.grundstuecksgrenze[0][i];
                }
                if(data.grundstuecksgrenze[1][i] < data.minn){
                    data.minn = data.grundstuecksgrenze[1][i];
                }
                if(data.grundstuecksgrenze[0][i] > data.maxe){
                    data.maxe = data.grundstuecksgrenze[0][i];
                }
                if(data.grundstuecksgrenze[1][i] > data.maxn){
                    data.maxn = data.grundstuecksgrenze[1][i];
                }
            }
//            System.out.println("mine: " + data.mine + " minn: " + data.minn);
//            System.out.println("maxe: " + data.maxe + " maxn: " + data.maxn);
            
            data.plotPolygon = createPolygon(tmpList);
            
            kGUI.flurstuckAusgewahlt();
            
            this.dispose();
        }catch(Exception e){
            e.printStackTrace();
            this.dispose();
        }        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jbtnAbbrechen;
    private javax.swing.JButton jbtnUebernehmen;
    private javax.swing.JFormattedTextField jfrmttxtfldFlurstuecknenner;
    private javax.swing.JFormattedTextField jfrmttxtfldFlurstueckzahler;
    private javax.swing.JLabel jlblE1;
    private javax.swing.JLabel jlblE2;
    private javax.swing.JLabel jlblE3;
    private javax.swing.JLabel jlblFlurstuecknummer;
    private javax.swing.JLabel jlblGemeinde;
    private javax.swing.JLabel jlblN1;
    private javax.swing.JLabel jlblN2;
    private javax.swing.JLabel jlblN3;
    private javax.swing.JLabel jlblUTMEasting;
    private javax.swing.JLabel jlblUTMNorthing;
    private javax.swing.JPanel jpnlETRS89_UTM;
    private javax.swing.JPanel jpnlFlurstueckEingabe;
    private javax.swing.JPanel jpnlKoordinatenEingabe;
    private javax.swing.JTabbedPane jtbdpnFlurKoord;
    private javax.swing.JTabbedPane jtbdpnKoordinatenEingabe;
    private javax.swing.JTextField jtxtfldEGrad;
    private javax.swing.JTextField jtxtfldEMinuten;
    private javax.swing.JTextField jtxtfldESekunden;
    private javax.swing.JTextField jtxtfldGemeinde;
    private javax.swing.JTextField jtxtfldNGrad;
    private javax.swing.JTextField jtxtfldNMinuten;
    private javax.swing.JTextField jtxtfldNSekunden;
    private javax.swing.JTextField jtxtfldUTMEasting;
    private javax.swing.JTextField jtxtfldUTMNorthing;
    // End of variables declaration//GEN-END:variables

    public static Polygon createPolygon(ArrayList<Coordinate> coordinates) {
        GeometryFactory geometryFactory = new GeometryFactory();

        // Stelle sicher, dass das Polygon geschlossen ist (erster = letzter Punkt)
        if (!coordinates.get(0).equals2D(coordinates.get(coordinates.size() - 1))) {
            coordinates.add(coordinates.get(0));
        }

        Coordinate[] coordArray = coordinates.toArray(new Coordinate[0]);
        LinearRing shell = geometryFactory.createLinearRing(coordArray);
        return geometryFactory.createPolygon(shell);
    }
    
    
}
